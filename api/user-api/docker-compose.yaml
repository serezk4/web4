services:
  redis:
    image: redis:latest
    restart: on-failure
    container_name: user-api-redis
    env_file:
      - ${CONFIG_BASE_PATH}/api/user-api/secret/redis-secret.env
    ports:
      - "127.0.0.1::6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    networks:
      - web4_user_network

  user-api:
    image: user-api:latest
    container_name: user-api
    build:
      context: .
      args:
        DOCKER_BUILDKIT: 1
    restart: on-failure
    env_file:
      # component related env
      - ${CONFIG_BASE_PATH}/api/user-api/secret/postgres.env
      - ${CONFIG_BASE_PATH}/api/user-api/secret/redis-secret.env
      # service related env
      - ${CONFIG_BASE_PATH}/service/postgres/postgres.env
      - ${CONFIG_BASE_PATH}/service/keycloak/realm.env
      - ${CONFIG_BASE_PATH}/service/keycloak/secret/client.env
      - ${CONFIG_BASE_PATH}/service/keycloak/secret/admin.env
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      start_period: 15s
      retries: 5
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - web4_user_network
      - web4_keycloak_network
      - web4_postgres_network

volumes:
  postgres_data:

networks:
  web4_user_network:
    external: true
  web4_keycloak_network:
    external: true
  web4_postgres_network:
    external: true
