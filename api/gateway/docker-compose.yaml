services:
  redis:
    image: redis:latest
    restart: on-failure
    container_name: gateway-redis
    env_file:
      - ${CONFIG_BASE_PATH}/api/gateway/secret/redis-secret.env
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5
    networks:
      - web4_gateway

  web4-gateway:
    image: web4-gateway:latest
    container_name: gateway
    build:
      context: .
      args:
        DOCKER_BUILDKIT: 1
    restart: on-failure
    env_file:
      # component related env
      - ${CONFIG_BASE_PATH}/api/gateway/secret/redis-secret.env
      - ${CONFIG_BASE_PATH}/api/ssl.env
      # service related env
      - ${CONFIG_BASE_PATH}/service/postgres/postgres.env
      - ${CONFIG_BASE_PATH}/service/keycloak/realm.env
      - ${CONFIG_BASE_PATH}/service/keycloak/secret/client.env
    ports:
      - "0.0.0.0:8445:8443" # 8443 is the default port for HTTPS / working only with SSL
      - "127.0.0.1:4444:8080" # 8080 is the default port for HTTP / working only IN DEV MODE
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health" ]
      interval: 10s
      timeout: 5s
      start_period: 15s
      retries: 5
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
    networks:
      - web4_gateway
      - web4_keycloak_network
      - web4_coordinates_network
      - web4_user_network

volumes:
  ssl-certs:
  postgres_data:

networks:
  web4_gateway:
    external: true
  web4_keycloak_network:
    external: true
  web4_user_network:
    external: true
  web4_coordinates_network:
    external: true
